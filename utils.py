"""Hybrid Demucs Music Source Separation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BFI-ZHVimatFn4oj1Bkzu1qhxiqP4yQh

# Hybrid Demucs from Colab

This supports the Demucs source separation model (https://github.com/facebookresearch/demucs/)
This is only for separation with pre-trained models, not training!

You can either upload files manually (slow) or link your Google Drive account.
"""
import os
from demucs.separate import main as demucs_main
import streamlit as st
import tqdm as tqdm_module  # Not from tqdm import tqdm!

demucs_path = '.'

in_path = f'{demucs_path}/inputs'
out_path = f'{demucs_path}/demucs_separated/'


def call_function_with_streamlit_progress(func, *args, **kwargs):
    progress_bar = st.progress(0)
    progress_text = st.empty()

    # Save the real tqdm
    real_tqdm = tqdm_module.tqdm

    # Fake tqdm
    class StreamlitTqdm(real_tqdm):
        def update(self, n=1):
            super().update(n)
            if self.total:
                progress = int((self.n / self.total) * 100)
                progress_bar.progress(min(progress, 100))
                progress_text.text(f"Progress: {progress}%")
                if self.total == self.n:
                    progress_bar.empty()
                    progress_text.empty()

    try:
        # Monkey-patch
        tqdm_module.tqdm = StreamlitTqdm

        # Call your function
        return func(*args, **kwargs)

    finally:
        # Always restore tqdm
        tqdm_module.tqdm = real_tqdm

def separate_tracks(inp=None, outp=None, ffmpeg_path=None):
    inp = inp or in_path
    inp = inp.replace(" ", "")
    outp = outp or out_path
    opts_str = f"-o {outp} -n htdemucs --device cpu --mp3 --mp3-bitrate=320 {inp}"
    opts = opts_str.split()
    os.environ["PATH"] = f"{ffmpeg_path}:{os.environ['PATH']}" if ffmpeg_path else os.environ["PATH"]
    call_function_with_streamlit_progress(demucs_main, opts)